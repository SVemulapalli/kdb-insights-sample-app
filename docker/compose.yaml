version: "3"
#
# Services.
#
services:

  sp_feed:
    image: ${KX_DOCKER_REG}/kxi-sp-python:${SP_PY_VERSION}
    command: -p 5000
    restart: "always"
    depends_on:
      - tp    
    environment:
      - KXI_LOG_LEVELS=default:debug # Override
      - KXI_SP_SPEC=/opt/kx/cfg/sp/taq.py
      # - KXI_SP_BETA_FEATURES=true
    ports:
      - 127.0.0.1::5000
    volumes:
      - ${HOME}/.qp.licenses:/opt/kx/lic 
      - ./data/sp:/sp   
      - ./cfg:/opt/kx/cfg 
    env_file:
      - .env 
    stdin_open: true
    tty: true     

  tp:
    image: ${KX_DOCKER_REG}/qce:${QCE_VERSION}
    restart: "always"
    environment:
      - KXI_LOG_LEVELS=default:debug # Optional
    ports:
      - 127.0.0.1::5010
    command: tick.q sym /logs -p 5010
    working_dir: /opt/kx/tick
    volumes:
      - ${HOME}/.qp.licenses:/opt/kx/lic    
      - ./tplog:/logs
      - ./kdb-tick:/opt/kx/tick
    env_file:
      - .env 
    stdin_open: true
    tty: true    

  sm:
  #
  # Storage Manager
  #  
    image: ${KX_DOCKER_REG}/kxi-sm-single:${DATABASE_VERSION}
    restart: "always"
    depends_on:
      - tp
    environment:
      - KXI_NAME=sm
      - KXI_SC=SM
      - KXI_ASSEMBLY_FILE=/opt/kx/cfg/${ASSEMBLY_FILE_YAML}
      - KXI_RT_LIB=/opt/kx/cfg/rt_tick_client_lib.q
      - KXI_SM_SMPORT=10001
      - KXI_SM_EOIPORT=10002
      - KXI_LOG_LEVELS=default:info  
      - KXI_CONFIG_FILE=/opt/kx/cfg/sm/config.json
      # - KXI_LATE_DATA=true    
    ports:
      - 127.0.0.1::10001
    volumes:
      - ${HOME}/.qp.licenses:/opt/kx/lic    
      - ./data:/data
      - ./tplog:/logs
      - ./cfg:/opt/kx/cfg 
    env_file:
      - .env 
    stdin_open: true
    tty: true      
  sm-sidecar:
    image: ${KX_DOCKER_REG}/kxi-sidecar:${SIDECAR_VERSION}
    environment:
      - KXI_CONFIG_FILE=/opt/kx/cfg/sm/config.json
    volumes:
      - ${HOME}/.qp.licenses:/opt/kx/lic  
      - ./cfg:/opt/kx/cfg     
    command: -p 8080   
  
  da-single:
    image: ${KX_DOCKER_REG}/kxi-da-single:${DATABASE_VERSION}
    restart: "always"
    depends_on:
      - tp
    environment:
      - KXI_NAME=dap
      - KXI_SC=dap
      - KXI_PORT=5080
      - KXI_LOG_LEVELS=default:info # Override
      - KXI_ASSEMBLY_FILE=/opt/kx/cfg/${ASSEMBLY_FILE_YAML}
      - KXI_DA_RDB_THREADS=0
      - KXI_DA_IDB_THREADS=4
      - KXI_DA_HDB_THREADS=8
      - KXI_RT_LIB=/opt/kx/cfg/rt_tick_client_lib.q
      - KXI_CUSTOM_FILE=/opt/kx/cfg/da/custom.api.q
      - KXI_SG_RC_ADDR=sgrc:5060
      - KXI_ALLOWED_SBX_APIS=.kxi.sql,.kxi.qsql
      - KXI_CONFIG_FILE=/opt/kx/cfg/da/config.json
    ports:
      - 127.0.0.1::5080
      - 127.0.0.1::5081
      - 127.0.0.1::5082
      - 127.0.0.1::5083
    volumes:
      - ${HOME}/.qp.licenses:/opt/kx/lic    
      - ./data:/data
      - ./tplog:/logs
      - ./cfg:/opt/kx/cfg     
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - .env    
    stdin_open: true
    tty: true 
  dap-sidecar:
    image: ${KX_DOCKER_REG}/kxi-sidecar:${SIDECAR_VERSION}
    environment:
      - KXI_CONFIG_FILE=/opt/kx/cfg/da/config.json
    volumes:
      - ${HOME}/.qp.licenses:/opt/kx/lic  
      - ./cfg:/opt/kx/cfg     
    command: -p 8080   
    ports:
      - 8084:8080
  rdb-sidecar:
    image: ${KX_DOCKER_REG}/kxi-sidecar:${SIDECAR_VERSION}
    environment:
      - KXI_CONFIG_FILE=/opt/kx/cfg/da/rdb-config.json
    volumes:
      - ${HOME}/.qp.licenses:/opt/kx/lic  
      - ./cfg:/opt/kx/cfg     
    command: -p 8080   
    ports:
      - 8081:8080
  idb-sidecar:
    image: ${KX_DOCKER_REG}/kxi-sidecar:${SIDECAR_VERSION}
    environment:
      - KXI_CONFIG_FILE=/opt/kx/cfg/da/idb-config.json
    volumes:
      - ${HOME}/.qp.licenses:/opt/kx/lic  
      - ./cfg:/opt/kx/cfg     
    command: -p 8080  
    ports:
      - 8082:8080 
  hdb-sidecar:
    image: ${KX_DOCKER_REG}/kxi-sidecar:${SIDECAR_VERSION}
    environment:
      - KXI_CONFIG_FILE=/opt/kx/cfg/da/hdb-config.json
    volumes:
      - ${HOME}/.qp.licenses:/opt/kx/lic  
      - ./cfg:/opt/kx/cfg     
    command: -p 8080   
    stdin_open: true
    tty: true 
    ports:
      - 8083:8080
  
  #
  # Resource Coordinator -- 1 per assembly.
  #
  sgrc:
    image: ${KX_DOCKER_REG}/kxi-sg-rc:${DATABASE_VERSION}
    restart: "always"
    environment:
      - KXI_NAME=sg_rc
      - KXI_PORT=5060
      - KXI_LOG_LEVELS=default:debug # Override
      - KXI_ASSEMBLY_FILE=/opt/kx/cfg/${ASSEMBLY_FILE_YAML}
      - KXI_AUTH_DISABLED=1
      - KXI_ALLOWED_SBX_APIS=.kxi.sql,.kxi.qsql
    ports:
      - 127.0.0.1::5060
    stdin_open: true
    tty: true 
    env_file:
      - .env     
    volumes: 
      - ${HOME}/.qp.licenses:/opt/kx/lic 
      - ./cfg:/opt/kx/cfg         

  #
  # Aggregator. Note we only have one here, but multiple can be configured.
  #
  sgagg:
    image: ${KX_DOCKER_REG}/kxi-sg-agg:${DATABASE_VERSION}
    restart: "always"
    environment:
      - KXI_NAME=sg_agg
      - KXI_PORT=5050
      - KXI_ASSEMBLY_FILE=/opt/kx/cfg/${ASSEMBLY_FILE_YAML}
      - KXI_CUSTOM_FILE=/opt/kx/cfg/agg/custom.q
      - KXI_SG_RC_ADDR=sgrc:5060
      - KXI_AUTH_DISABLED=1
    ports:
      - 127.0.0.1::5050
    # Optional: deploy multiple replicas.
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - .env     
    stdin_open: true
    tty: true 
    volumes: 
      - ${HOME}/.qp.licenses:/opt/kx/lic 
      - ./cfg:/opt/kx/cfg                

  #
  # Gateway.
  #
  sggw:
    image: ${KX_DOCKER_REG}/kxi-sg-gw:${DATABASE_VERSION}
    restart: "always"
    environment:
      - KXI_ASSEMBLY_FILE=/opt/kx/cfg/${ASSEMBLY_FILE_YAML}
      - GATEWAY_QIPC_PORT=5040
      - GATEWAY_HTTP_PORT=8080
      - KXI_AUTH_DISABLED=1
      - KXI_LOG_LEVELS=default:trace # Override  
      - KXI_SG_RC_ADDR=sgrc:5060   
    ports:
      - 5040:5040
      - 8080:8080
    # Optional: deploy multiple replicas.
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - .env     
    stdin_open: true
    tty: true  
    volumes: 
      - ${HOME}/.qp.licenses:/opt/kx/lic 
      - ./cfg:/opt/kx/cfg         
#
# Metrics
#
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./cfg/prometheus:/etc/prometheus
      - prom_data:/prometheus
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      # - GF_SECURITY_ADMIN_USER=admin
      # - GF_SECURITY_ADMIN_PASSWORD=grafana
      - GF_AUTH_ANONYMOUS_ENABLED=true
    volumes:
      - ./cfg/grafana/provisioning:/etc/grafana/provisioning
      - ./cfg/grafana/dashboards:/var/lib/grafana/dashboards
      # - ./cfg/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      # - ./cfg/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources

volumes:
  prom_data:


  # rdb:
  # #
  # # Intraday Database
  # #
  #   image: ${KX_DOCKER_REG}/kxi-da:${DATABASE_VERSION}
  #   restart: "always"
  #   environment:
  #     - KXI_NAME=rdb
  #     - KXI_SC=RDB
  #     - KXI_PORT=5090
  #     # - KXI_LOG_LEVELS=default:trace # Override
  #     - KXI_ASSEMBLY_FILE=/opt/kx/cfg/${ASSEMBLY_FILE_YAML}
  #     - KXI_CUSTOM_FILE=/opt/kx/cfg/da/custom.api.q  
  #     - KXI_RT_LIB=/opt/kx/cfg/rt_tick_client_lib.q
  #     - KXI_SG_RC_ADDR=sgrc:5060
  #   ports:
  #     - 127.0.0.1::5090
  #   volumes:
  #     - ${HOME}/.qp.licenses:/opt/kx/lic    
  #     - ./data:/data
  #     - ./cfg:/opt/kx/cfg   
  #     - ./tplog:/logs    
  #   deploy:
  #     mode: replicated
  #     replicas: 1
  #   env_file:
  #     - .env           
  #   stdin_open: true
  #   tty: true    

  # idb:
  # #
  # # Intraday Database
  # #
  #   image: ${KX_DOCKER_REG}/kxi-da:${DATABASE_VERSION}
  #   restart: "always"
  #   command: -s 4
  #   environment:
  #     - KXI_NAME=idb
  #     - KXI_SC=IDB
  #     - KXI_PORT=5090
  #     - KXI_LOG_LEVELS=default:trace # Override
  #     - KXI_ASSEMBLY_FILE=/opt/kx/cfg/${ASSEMBLY_FILE_YAML}
  #     - KXI_CUSTOM_FILE=/opt/kx/cfg/da/custom.api.q
  #     - KXI_SG_RC_ADDR=sgrc:5060
  #     - KXI_ALLOWED_SBX_APIS=.kxi.sql,.kxi.qsql
  #   ports:
  #     - 127.0.0.1::5090
  #   volumes:
  #     - ${HOME}/.qp.licenses:/opt/kx/lic    
  #     - ./data:/data
  #     - ./cfg:/opt/kx/cfg       
  #   deploy:
  #     mode: replicated
  #     replicas: 2
  #   env_file:
  #     - .env           
  #   stdin_open: true
  #   tty: true    

  # hdb:
  # #
  # # Historical Database
  # #
  #   image: ${KX_DOCKER_REG}/kxi-da:${DATABASE_VERSION}
  #   restart: "always"
  #   command: -s 8
  #   environment:
  #     - KXI_NAME=hdb
  #     - KXI_SC=HDB
  #     - KXI_PORT=5100      
  #     - KXI_ASSEMBLY_FILE=/opt/kx/cfg/${ASSEMBLY_FILE_YAML}
  #     - KXI_CUSTOM_FILE=/opt/kx/cfg/da/custom.api.q      
  #     - KXI_SG_RC_ADDR=sgrc:5060
  #     - KXI_ALLOWED_SBX_APIS=.kxi.sql,.kxi.qsql
  #     # - KX_OBJSTR_INVENTORY_FILE=_inventory/all.json.gz
  #     # - KX_OBJSTR_CACHE_PATH=/opt/kx/cache
  #     # - KX_OBJSTR_CACHE_SIZE=10000
  #     # - KXI_CUSTOM_FILE=/opt/kx/cfg/da/custom.api.q      
  #   ports:
  #     - 127.0.0.1::5100
  #   volumes: 
  #     - ${HOME}/.qp.licenses:/opt/kx/lic 
  #     - ./cfg:/opt/kx/cfg 
  #     - ./data:/data
  #     # - ./cache:/opt/kx/cache        
  #   deploy:
  #     mode: replicated
  #     replicas: 2
  #   env_file:
  #     - .env       
  #   stdin_open: true
  #   tty: true        


  # feed:
  #   image: ${KX_DOCKER_REG}/qce:${QCE_VERSION}
  #   depends_on:
  #     - tp    
  #   environment:
  #     - KXI_LOG_FORMAT=text # Optional
  #     - KXI_LOG_LEVELS=default:debug # Optional
  #   ports:
  #     - 127.0.0.1::5009
  #   command: /opt/kx/cfg/proc/feed.q -p 5009 
  #   volumes:
  #     - ${HOME}/.qp.licenses:/opt/kx/lic    
  #     - ./cfg:/opt/kx/cfg 
  #   env_file:
  #     - .env 
  #   stdin_open: true
  #   tty: true     